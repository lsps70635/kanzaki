Table of Contents
Online Documentation
Manual
Introduction
Requirements
Supported Hardware
Unity Package Manual
Exposing Members
Action Settings
Preferences Window
Plugin Manual
Play Action
Pause Action
Execute Menu Action
Set Field / Property Action
Invoke Method Action
Scripting API
F10.StreamDeckIntegration
StreamDeck
StreamDeckRuntime
StreamDeckSettings
StreamDeckSocket
F10.StreamDeckIntegration.Attributes
StreamDeckButtonAttribute
StreamDeckGroupAttribute
F10.StreamDeckIntegration.Demo
StreamDeckExample
F10.StreamDeckIntegration.Demo.Editor
StreamDeckStaticExample
Online Documentation
Thanks for using and supporting Stream Deck Integration!

Ful documentation is included in this PDF, though, the use of the online version is highly recommended.

This offline documentation is an automatic conversion of the online version, available at:
https://docs.f10.dev/streamdeckintegration
The online documentation is always up-to-date, and includes useful features like search support.

If you produce a cool project using this integration, I would love to hear about it! Maybe even feature it if you would al ow for it. You can send any cool stuff to adam@f10.dev.

For any feedback, suggestions, issues or questions not covered by the current documentation, please send an email to support@f10.dev.


Stream Deck Integration Manual
The Stream Deck Integration package al ows any official Stream Deck hardware running official software to interact and communicate with the Unity Editor and / or built Unity projects.

The package is available for purchase at the Unity Asset Store.

The Stream Deck plugin is available for free at the Stream Deck Store, accessible inside the official software, under "More
Actions".

The plugin can also be manual y instal ed from the included plugin file inside the package.

 Asset Store
Stream Deck Integration
Tools/Input Management
Àdam Carballo
Requirements
Unity Version
The package has been ful y tested in Unity 2018.4 LTS and Unity 2020.1. Any other intermediate version should work without any issues.

Higher Unity versions should also work without any major issues. If any fixes are required for future versions, new updates wil be released along feature complete Unity versions. Alpha and Beta Unity versions (.a & .b) are not continuously supported, and any issues found on them wil probably be addressed on ful releases.

Older Unity versions (namely Unity 5) are not supported. There is no reason to believe that moderately recent versions shouldn't work, but changes in Unity's API may break the package.

System Requirements
Unity Editor
Any system that can run the Unity Editor supports al features of this package.

Keep in mind that there is no official support for Stream Deck hardware under Linux. There are multiple open-source projects that aim to support Stream Deck hardware under Linux, but I'm not aware of any of them that support Stream Deck Plugins, which is required for the package to communicate with a Stream Deck.

Built project
Similar to Editor support, only Windows and MacOS built projects are supported by default, as this is a limitation based on Stream Deck's supported platforms.

Network
The package uses the port 2245 to establish an internal communication between the Unity Editor or built project and the Stream Deck official software.

There is currently no support to change this port manual y, so if any other process is occupying the port, the plugin won't be able to initialise.



Supported Hardware
Any official y released Stream Deck hardware (and software) wil work with this package, as long as the official Stream Deck software with the required plugin are running in the same system as the Unity Editor or built project.

Al the fol owing units are supported:
Stream Deck with 15 keys
Stream Deck Mini with 6 keys
Stream Deck XL with 32 keys


Stream Deck Mobile (iOS & Android app)
Unity Package Manual
Quickstart
Import the package using the Package Manager (or the Asset Store, depending on your Unity version). Make sure al files inside the Scripts folder are imported. The Demo folder is optional.

The package doesn't require any extra configuration inside the Unity Editor to function.

Assuming a Stream Deck is connected to the system, the official software is running and the plugin is instal ed, the Editor should connect automatical y upon assembly refresh (after importing the package).

To expose your custom fields, properties, methods and / or menus to be invoked by a Stream Deck, refer to Exposing Members.

More information and a quickstart regarding the plugin can be found in the Plugin Manual.

Built Project Support
If your project only requires the Stream Deck to work in the Unity Editor, no extra configuration is required.

To add support for a Stream Deck to interact with a built project, a GameObject must contain the StreamDeckRuntime component.

The component wil automatical y start a connection on Awake , and disconnect when destroyed.

Example Scene
Inside the Demo folder you can find a scene (named Demo as wel ) containing two GameObjects ( StreamDeckRuntime and StreamDeckExample ).

For a quick understanding of al the API available, StreamDeckExample.cs and StreamDeckStaticExample.cs contain ful y commented code. For a more visual documentation, check the Scripting API instead.

Exposing Members
By default, the Stream Deck plugin and package supports handling the Editor state (Play / Pause) and execute menu items.

To invoke methods, or set fields and properties directly, members must be exposed to the package logic using attributes in code.

Adding / Removing Instanced Objects
For non-static classes, each instance must add itself to be exposed and available to be cal ed by a Stream Deck. It must also remove itself before being destroyed, or exceptions could occur if a Stream Deck tries to invoke a destroyed object.

The fol owing example wil keep al the exposed members of a MonoBehaviour available while the object is alive and instanced: private void OnEnable() {
// Registers this class as a StreamDeck enabled class
StreamDeck.Add(this);
}
private void OnDisable() {
// Removes this class as a StreamDeck enabled class
StreamDeck.Remove(this);
}
Adding Static Objects
Static classes can add al the exposed members using a slightly different method. Since a static class wil never be destroyed, once added static classed can't be removed.

The fol owing example wil add al the exposed members of a static class as soon as the object is constructed: static MyStaticClass() {
// Registers this class as a StreamDeck enabled class
StreamDeck.AddStatic(typeof(MyStaticClass));
}
 NOTE
Make sure that any class that contains attributes (and you want exposed to the Stream Deck) contains calls to StreamDeck.Add() and StreamDeck.Remove() .

Single Member (Button)
To add only one specific field, property or method to be exposed and available to be cal ed by a Stream Deck, use the StreamDeckButtonAttribute . If no ID is defined on the attribute, the member name wil be used:
[StreamDeckButton]
public int _field = 0;
[StreamDeckButton]
private float Property { get; set; }
[StreamDeckButton("CustomMethodId")]
public void Method() {
// [...]
}
Multiple Members (Group)
To add and expose al members inside a class (useful for debug-only classes) to be cal ed by a Stream Deck, use the StreamDeckGroupAttribute . If no ID is defined on the attribute, the class name wil be used:
[StreamDeckGroup]
private class MyClass {
[...]
}
[StreamDeckGroup("CustomGroupId")]
private class MyOtherClass {
[...]
}
 NOTE
Classes, fields, properties and methods can be private, internal or public, as the package uses reflection to invoke them.

Action Settings
Stream Deck actions (also known as "buttons") can be customized directly from Unity, al owing manual y pre-defined actions to have their title or icon / image changed from the editor, or even at runtime from a built project.

Currently, only the fol owing features are supported. The listed elements here are mostly limited by the Stream Deck SDK own methods and features.

Set Action Title
 NOTE
The targeted action must not have any custom title in the Stream Deck software, as manually set titles have priority over SDK-driven ones.

Make sure the action has no title, and the Show Title toggle is enabled.

The fol owing example wil change the title of the action that has TitleTest as it's ID:
[StreamDeckButton("TitleTest")]
private void TitleTest() {
// Unreleated logic
}
public void ChangeTitle() {
var title = "New Title!";
StreamDeckSettings.SetButtonTitle(title, "TitleTest");
}
For actions defined as part of a group, make sure to include the group ID along with the member ID:
[StreamDeckGroup]
public class TestClass {
private void TitleTest() {
// Unreleated logic
}
}
public void ChangeTitle() {
var title = "New Title!";
StreamDeckSettings.SetButtonTitle(title, "TitleTest", "TestClass");
}
Set Action Image / Icon
 NOTE
The targeted action must not have any custom icon in the Stream Deck software, as manually set assets have priority over SDK-driven ones.

Make sure the action has no icon. Reset to Default option can be used to remove a custom asset.

 NOTE
Assets will be sent in base64 format, as PNG images. Any Texture2D (not compressed, and with read-write support enabled) should be supported.

 NOTE
Stream Deck's use low resolution screens, and won't benefit from large images. Assets with a resolution higher than 128x128px won't have visible improvements. This may not be accurate for the mobile app version.

The fol owing example wil change the icon of the action that has ImageTest as it's ID:
[StreamDeckButton("ImageTest")]
private void ImageTest() {
// Unreleated logic
}
public void ChangImage(Texture2D image) {
StreamDeckSettings.SetButtonImage(image, "ImageTest");
}
For actions defined as part of a group, make sure to include the group ID along with the member ID:
[StreamDeckGroup]
public class TestClass {
private void ImageTest() {
// Unreleated logic
}
}
public void ChangImage(Texture2D image) {
StreamDeckSettings.SetButtonImage(image, "ImageTest", "TestClass");
}
Immediate Mode
Al features support immediate or queued sending rates. By default, al actions sent by Unity to Stream Deck (or vice-versa) are automatical y queued. For normal operation, the queue delay is almost invisible, and prevents race conditions.

If required, al methods can be cal ed with the parameter immediate set to true , which wil skip any current queued events, and instead communicate the setting change on the exact same frame. This can help if multiple settings should be changed on the same frame:
public void DoItNow() {
var title = "Immediate Title";
StreamDeckSettings.SetButtonTitle(title, "MemberId", "GroupId", true); var image = new Texture2D(64,64);
StreamDeckSettings.SetButtonImage(image, "MemberId", "GroupId", true);
}

Preferences Window
The package includes configurable settings located in Unity's Preferences. These can be found under Unity > Preferences... > Stream Deck .

NAME
DEFAULT
DESCRIPTION
Logging
Package logging. Critical will only show errors, Essential will show warnings and other information, All will Essential
Level
show debug, including message payloads.

 NOTE
When opening the preferences window for the first time, a StreamDeckPreferences asset will be generated inside Assets/Editor/ . This asset can be relocated anywhere inside the project, but should be kept on an Editor-only folder or assembly.

Plugin Manual
Quickstart
The Stream Deck plugin can be instal ed using the internal Stream Deck Store from the official software (also named "More Actions").

The plugin can also be instal ed manual y if needed. The compressed plugin can be found inside the package, named com.adamcarballo.unity-integration.streamDeckPlugin .

 NOTE
The included plugin with package may not be the most updated version available. It's recommended to install the plugin using the Stream Deck Store, which includes support for automatic updates.

For more information regarding Stream Deck actions, check the official documentation.

Each available action can be found under the "Unity" category. A documentation reference for each action can be found on the left sidebar under the Plugin Manual.

Play Action
This action al ows to switch between play modes (Editor and runtime) on the Unity Editor. The action icon wil also automatical y update and reflect the current editor status on it's own.

Parameters
This action has no configurable parameters.

Pause Action
This action al ows to switch between pause modes (Editor and runtime) on the Unity Editor. The action icon wil also automatical y update and reflect the current editor status on it's own.

 NOTE
The Unity Editor can be paused regardless of it's play mode state. This is helpful to start a game paused and scroll through frames manually.

Parameters
This action has no configurable parameters.

Execute Menu Action
This action al ows to execute any menu item (including custom items using MenuItem attributes) on the Unity Editor.

 NOTE
This action uses the default Unity API to execute menu items. Any limitation you may found can't be fixed by the package itself.

Parameters
NAME
REQUIRED
DESCRIPTION
Path
Yes
The full menu item path with spaces included.

Set Field / Property Action
This action al ows to set any exposed field or property value (with a supported type) on the Unity Editor and built projects.

Parameters
NAME
REQUIRED
DESCRIPTION
Group
No
Must be enabled if the field or property to set was exposed as part of a StreamDeckGroup .

Group
Yes (if
ID set in the StreamDeckGroup attribute. If no ID is set the class name is the exposed ID.

ID
group)
Member
ID of the field or property to set. If using StreamDeckGroup attribute or StreamDeckButton without a defined Yes
ID
ID, use the field or property name.

Type
Yes
Type of the field or property to set. Supported values include: Int , Float , Bool and String .

Value
Yes
Value to be set in the field or property. Make sure the value matches a supported type.

Invoke Method Action
This action al ows to invoke any exposed method with up to one parameter on the Unity Editor and built projects.

Parameters
NAME
REQUIRED
DESCRIPTION
Group
No
Must be enabled if the method to invoke was exposed as part of a StreamDeckGroup .

Yes (if
Group ID
ID set in the StreamDeckGroup attribute. If no ID is set the class name is the exposed ID.

group)
Member
ID of the method to invoke. If using StreamDeckGroup attribute or StreamDeckButton without a defined Yes
ID
ID, use the method name.

Must be enabled if the method requires a parameter to be invoked. Only one parameter per method is Parameter
No
supported. Supported values include: Int , Float , Bool and String .

Yes (if
Value
Parameter value to invoke the method. Make sure the value matches a supported type.

parameter)
Namespace F10.StreamDeckIntegration
Classes
StreamDeck
Handles adding and removing members that can be executed by Stream Deck.

StreamDeckRuntime
Keeps StreamDeckSocket updated when the integration is running on a build / not in the editor.

StreamDeckSettings
Handles changes to Stream Deck actions, like title and icon control.

StreamDeckSocket
Manages WebSocket connections and messages with the Stream Deck.

Class StreamDeck
Handles adding and removing members that can be executed by Stream Deck.

Inheritance
System.Object
StreamDeck
Namespace: F10.StreamDeck Integration
Assembly: F10.StreamDeck Integration.dll
Syntax
[ExecuteAlways]
public static class StreamDeck
Methods
Add(Object)
Adds the given object member instance to the list of available StreamDeckButtonAttribute and StreamDeckGroupAttribute.

Declaration
public static void Add(object obj)
Parameters
TYPE
NAME
DESCRIPTION
System.Object
obj
Boxed member to add.

AddStatic(Type)
Adds the given type as a static member to the list of available StreamDeckButtonAttribute and StreamDeckGroupAttribute.

Declaration
public static void AddStatic(Type type)
Parameters
TYPE
NAME
DESCRIPTION
System.Type
type
Type of the static member to add.

Remove(Object)
Removes the given object member instance to the list of available StreamDeckButtonAttribute and StreamDeckGroupAttribute.

Declaration
public static void Remove(object obj)
Parameters
TYPE
NAME
DESCRIPTION
TYPE
NAME
DESCRIPTION
System.Object
obj
Boxed member to remove.

Class StreamDeckRuntime
Keeps StreamDeckSocket updated when the integration is running on a build / not in the editor.

Inheritance
System.Object
UnityEngine.Object
UnityEngine.Component
UnityEngine.Behaviour
UnityEngine.MonoBehaviour
StreamDeckRuntime
Namespace: F10.StreamDeck Integration
Assembly: F10.StreamDeck Integration.dll
Syntax
[DisallowMultipleComponent]
public class StreamDeckRuntime : MonoBehaviour
Class StreamDeckSettings
Handles changes to Stream Deck actions, like title and icon control.

Inheritance
System.Object
StreamDeckSettings
Namespace: F10.StreamDeck Integration
Assembly: F10.StreamDeck Integration.dll
Syntax
public static class StreamDeckSettings
Methods
SetButtonImage(Texture2D, String, String, Boolean)
Set a new image / icon on the Stream Deck action linked to the passed member.

If the target action has a custom icon (manual y set icon on the Stream Deck software) changes won't be visible.

Declaration
public static void SetButtonImage([NotNull] Texture2D image, [NotNull] string id, string groupId = null, bool immediate = false) Parameters
TYPE
NAME
DESCRIPTION
UnityEngine.Texture2D
image
Texture2D to set as the action's image / action.

System.String
id
Member ID of the targeted action.

Optional.

System.String
groupId
Group ID of the targeted action. Defaults to null for actions without groups.

Optional.

System.Boolean
immediate
Allows the setting to be sent immediately, instead of being added to the queue. Defaults to false.

SetButtonTitle(String, String, String, Boolean)
Set a new title on the Stream Deck action linked to the passed member.

If the target action has a custom title (manual y set title on the Stream Deck software) changes won't be visible.

Declaration
public static void SetButtonTitle([NotNull] string title, [NotNull] string id, string groupId = null, bool immediate = false) Parameters
TYPE
NAME
DESCRIPTION
TYPE
NAME
DESCRIPTION
System.String
title
Text to set as the action's title.

System.String
id
Member ID of the targeted action.

Optional.

System.String
groupId
Group ID of the targeted action. Defaults to null for actions without groups.

Optional.

System.Boolean
immediate
Allows the setting to be sent immediately, instead of being added to the queue. Defaults to false.

Class StreamDeckSocket
Manages WebSocket connections and messages with the Stream Deck.

Inheritance
System.Object
StreamDeckSocket
Namespace: F10.StreamDeck Integration
Assembly: F10.StreamDeck Integration.dll
Syntax
public static class StreamDeckSocket
Properties
IsConnected
Is the WebSocket connected and alive.

Declaration
[PublicAPI]
public static bool IsConnected { get; }
Property Value
TYPE
DESCRIPTION
System.Boolean
Methods
Connect()
Try to connect or re-connect to any available Stream Deck.

Declaration
[PublicAPI]
public static void Connect()
Disconnect()
Disconnect from any connected Stream Deck.

Declaration
[PublicAPI]
public static void Disconnect()
OnUpdate()
Handle one queued received and / or sent message.

Declaration
[PublicAPI]
public static void OnUpdate()
Namespace F10.StreamDeckIntegration.Attributes
Classes
StreamDeckButtonAttribute
Attribute to mark specific fields, properties and / or methods as executable by Stream Deck.

StreamDeckGroupAttribute
Attribute to mark specific classes with al it's members as executable by Stream Deck.

Class StreamDeckButtonAttribute
Attribute to mark specific fields, properties and / or methods as executable by Stream Deck.

Inheritance
System.Object
System.Attribute
StreamDeckButtonAttribute
Namespace: F10.StreamDeck Integration.Attributes
Assembly: F10.StreamDeck Integration.dll
Syntax
[PublicAPI]
[AttributeUsage(AttributeTargets.Field | AttributeTargets.Method | AttributeTargets.Property)]
public class StreamDeckButtonAttribute : Attribute
Constructors
StreamDeckButtonAttribute(String)
Marks this field, property or method as executable by the Stream Deck.

Declaration
public StreamDeckButtonAttribute(string id = null)
Parameters
TYPE
NAME
DESCRIPTION
System.String
id
Custom ID. Defaults to the name of the member.

Class StreamDeckGroupAttribute
Attribute to mark specific classes with al it's members as executable by Stream Deck.

Inheritance
System.Object
System.Attribute
StreamDeckGroupAttribute
Namespace: F10.StreamDeck Integration.Attributes
Assembly: F10.StreamDeck Integration.dll
Syntax
[PublicAPI]
[AttributeUsage(AttributeTargets.Class)]
public class StreamDeckGroupAttribute : Attribute
Constructors
StreamDeckGroupAttribute(String)
Marks al the fields, properties and methods inside the class as executable by the Stream Deck.

Declaration
public StreamDeckGroupAttribute(string id = null)
Parameters
TYPE
NAME
DESCRIPTION
System.String
id
Custom ID. Defaults to the name of the class.

Namespace F10.StreamDeckIntegration.Demo
Classes
StreamDeckExample
Example class using StreamDeckButtonAttribute attributes and runtime support.

Class StreamDeckExample
Example class using StreamDeckButtonAttribute attributes and runtime support.

Inheritance
System.Object
UnityEngine.Object
UnityEngine.Component
UnityEngine.Behaviour
UnityEngine.MonoBehaviour
StreamDeckExample
Namespace: F10.StreamDeck Integration.Demo
Assembly: Assembly-CSharp.dll
Syntax
public class StreamDeckExample : MonoBehaviour
Fields
_field
Declaration
[Header("Check the source code for commented API!")]
[StreamDeckButton(null)]
public int _field
Field Value
TYPE
DESCRIPTION
System.Int32
Methods
ExampleMethod()
Declaration
[StreamDeckButton("ExampleMethod")]
public void ExampleMethod()
Namespace F10.StreamDeckIntegration.Demo.Editor
Classes
StreamDeckStaticExample
Example class using StreamDeckGroupAttribute attributes and static support.

Class StreamDeckStaticExample
Example class using StreamDeckGroupAttribute attributes and static support.

Inheritance
System.Object
StreamDeckStaticExample
Namespace: F10.StreamDeck Integration.Demo.Editor
Assembly: Assembly-CSharp-Editor.dll
Syntax
[ExecuteAlways]
[InitializeOnLoad]
[StreamDeckGroup(null)]
public static class StreamDeckStaticExample
Methods
ExampleStaticFields()
Declaration
public static void ExampleStaticFields()
ExampleStaticMethod()
Declaration
public static void ExampleStaticMethod()


Document Outline

Table of Contents
Online Documentation
Manual Introduction Requirements
Supported Hardware


Unity Package Manual Exposing Members
Action Settings
Preferences Window


Plugin Manual Play Action
Pause Action
Execute Menu Action
Set Field / Property Action
Invoke Method Action


Scripting API F10.StreamDeckIntegration StreamDeck
StreamDeckRuntime
StreamDeckSettings
StreamDeckSocket


F10.StreamDeckIntegration.Attributes StreamDeckButtonAttribute
StreamDeckGroupAttribute


F10.StreamDeckIntegration.Demo StreamDeckExample


F10.StreamDeckIntegration.Demo.Editor StreamDeckStaticExample


